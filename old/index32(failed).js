// 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

// 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function (n) {
  const basic2 = 2;
  const basic3 = 3;
  if (n <= 3) {
    return n;
  }
  let x = n;
  while (n > 3) {}
};

// f(n) = f(n - 1) + f(n - 2)

// f(4) = f(3) + f(2)  1 1
// f(5) = f(4) + f(3) = 2f(3) + f(2)  2 1
// f(6) = f(5) + f(4) = 2f(3) + f(2) + f(3) + f(2) = 3f(3) + 2f(2)  3 2
// f(7) = f(6) + f(5) = 3f(3) + 2f(2) + 2f(3) + f(2) = 5f(3) + 3f(2) 5 3
// f(8) = f(7) + f(6) = 5f(3) + 3f(2) + 3f(3) + 2f(2) = 8f(3) + 5f(2) 8 5
// f(n) = f(n-1) + f(n-2) =

// 1 2 3 5 8
// 1 1 2 3 5

n = 2;
// [1,1] [2]
//1+1
n = 3;
//[1,1,1] [1,2] [2,1]
//1+2
n = 4;
//[1,1,1,1] [1,1,2] [1,2,1] [2,1,1] [2,2]
//1+3+1
n = 5;
//[1,1,1,1,1] [1,1,1,2] [1,1,2,1] [1,2,1,1] [2,1,1,1] [2,1,2] [2,2,1] [1,2,2]
//1+4+3

n = 6;
//[1,1,1,1,1,1] [1,1,1,1,2] [1,1,1,2,1] [1,1,2,1,1] [1,2,1,1,1] [2,1,1,1,1] [2,1,1,2] [2,1,2,1] [2,2,1,1] [1,1,2,2] [1,2,1,2] [1,2,2,1] [2,2,2]
//1+5+6+1

//2:2 3:3 4:5 5:8 6:13
