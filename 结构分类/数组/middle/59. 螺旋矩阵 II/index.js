// 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。

// 示例 1：

// 输入：n = 3
//      [[1,2,3],[4,5,6],[7,8,9]]
// 输出：[[1,2,3],[8,9,4],[7,6,5]]
// 示例 2：

// n = 4
// n ** 2 = 16
// [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]]
// [[1,2,3,4],[12,13,14,5],[11,16,15,6],[10,9,8,7]]
/**
 *  1 2 3 4
 * 12 13 14 5
 * 11  16  15 6
 * 10 9 8 7
 *
 *  1 2 3 4
 *  5 6 7 8
 *  9 10 11 12
 *  13 14 15 16
 */

// 输入：n = 1
// 输出：[[1]]

// 提示：

// 1 <= n <= 20

/**
 * @param {number} n
 * @return {number[][]}
 */
var generateMatrix = function (n) {
  for (let i = 1; i <= n * n; i++) {}

  console.log(10000 * (1 + 0.01) ** 210);
};

n = 3;

console.log(generateMatrix(n));
